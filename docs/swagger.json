{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/admin/branch": {
            "put": {
                "description": "Update a branch with new information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branches"
                ],
                "summary": "Update a branch",
                "parameters": [
                    {
                        "description": "Branch object to be updated",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Branch"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Branch updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Branch"
                        }
                    },
                    "400": {
                        "description": "error\": \"Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new branch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branches"
                ],
                "summary": "Create a new branch",
                "parameters": [
                    {
                        "description": "Branch object to be created",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Branch"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Branch created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Branch"
                        }
                    },
                    "400": {
                        "description": "error\": \"Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete all branches",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branches"
                ],
                "summary": "Delete all branches",
                "responses": {
                    "200": {
                        "description": "All branches have been deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error\": \"Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/branch/{id}": {
            "get": {
                "description": "Retrieve a branch by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branches"
                ],
                "summary": "Get a branch by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Branch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Branch retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Branch"
                        }
                    },
                    "400": {
                        "description": "error\": \"Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a branch by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Branches"
                ],
                "summary": "Delete a branch by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Branch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Branch deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Branch"
                        }
                    },
                    "400": {
                        "description": "error\": \"Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/customer/account/deposit": {
            "post": {
                "description": "Deposit money into an account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Deposit money into an account",
                "parameters": [
                    {
                        "description": "Transaction object to be deposited",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Transaction"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "message: Your Transaction has been completed successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error: Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/customer/account/nominee": {
            "post": {
                "description": "Add a nominee to an account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nominees"
                ],
                "summary": "Add a nominee to an account",
                "parameters": [
                    {
                        "description": "Add nominee request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.AddNomineeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message: Nominee added",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error: Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/customer/account/transactions/{id}": {
            "get": {
                "description": "Retrieve a transaction by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get a transaction by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction retrieved successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error: Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/customer/account/transfer": {
            "post": {
                "description": "Transfer money between accounts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Transfer money between accounts",
                "parameters": [
                    {
                        "description": "Transaction object to be transferred",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Transaction"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "message: Your Transaction has been completed successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error: Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/customer/account/withdraw": {
            "post": {
                "description": "Withdraw money from an account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Withdraw money from an account",
                "parameters": [
                    {
                        "description": "Transaction object to be withdrawn",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Transaction"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "message: Your Transaction has been completed successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "502": {
                        "description": "error: Bad gateway",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/customer/account/{number}": {
            "get": {
                "description": "Retrieve an account by its account number",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Get an account by account number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account number",
                        "name": "number",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account retrieved successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error: Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/customer/account/{number}/nominee": {
            "get": {
                "description": "Retrieve all nominees by account number",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Get all nominees by account number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account number",
                        "name": "number",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Nominees retrieved successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error: Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/customer/account/{number}/nominee/{id}": {
            "delete": {
                "description": "Delete a nominee from an account by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nominees"
                ],
                "summary": "Delete a nominee from an account by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account number",
                        "name": "number",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Nominee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message: Nominee deleted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error: Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/customer/account/{number}/transactions": {
            "get": {
                "description": "Retrieve all transactions by account number",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get all transactions by account number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account number",
                        "name": "number",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transactions retrieved successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error: Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/customer/{id}/account": {
            "get": {
                "description": "Retrieve all accounts by customer ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Get all accounts by customer ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account retrieved successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error: Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/manager/account": {
            "put": {
                "description": "Update account information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Update account information",
                "parameters": [
                    {
                        "description": "Updated account object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Account"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Account updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error: Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new account for a customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Create a new account",
                "parameters": [
                    {
                        "description": "Account object to be created",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Account created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error: Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete all accounts",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Delete all accounts",
                "responses": {
                    "200": {
                        "description": "message: All tables have been deleted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error: Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/manager/account/{id}": {
            "get": {
                "description": "Retrieve an account by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Get an account by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account retrieved successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error: Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an account by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Delete an account by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Branches deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error: Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/manager/branch/{id}/account": {
            "get": {
                "description": "Retrieve all accounts by branch ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Get all accounts by branch ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Branch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account retrieved successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error: Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/manager/customer": {
            "put": {
                "description": "Update customer information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Update customer information",
                "parameters": [
                    {
                        "description": "Updated customer object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Customer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Customer updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error: Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new customer and associated account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Create a new customer and account",
                "parameters": [
                    {
                        "description": "Customer object to be created",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateCustomerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Customer created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error: Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete all customers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Delete all customers",
                "responses": {
                    "200": {
                        "description": "message: All Customers have been deleted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error: Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/manager/customer/{id}": {
            "get": {
                "description": "Retrieve a customer by their ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Get a customer by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer retrieved successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error: Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a customer by their ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Delete a customer by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error: Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/super/bank": {
            "get": {
                "description": "Retrieve all banks",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Banks"
                ],
                "summary": "Get all banks",
                "responses": {
                    "200": {
                        "description": "Banks retrieved successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error\": \"Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Update a bank with new information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Banks"
                ],
                "summary": "Update a bank",
                "parameters": [
                    {
                        "description": "Name of the bank",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Bank updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Bank"
                        }
                    },
                    "400": {
                        "description": "error\": \"Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new bank with the provided name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Banks"
                ],
                "summary": "Create a new bank",
                "parameters": [
                    {
                        "description": "Name of the bank",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Bank created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Bank"
                        }
                    },
                    "400": {
                        "description": "error\": \"Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete all banks",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Banks"
                ],
                "summary": "Delete all banks",
                "responses": {
                    "200": {
                        "description": "message\": \"All rows have been deleted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error\": \"Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/super/bank/{id}": {
            "get": {
                "description": "Retrieve a bank by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Banks"
                ],
                "summary": "Get a bank by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Bank ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bank retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Bank"
                        }
                    },
                    "400": {
                        "description": "error\": \"Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a bank by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Banks"
                ],
                "summary": "Delete a bank by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Bank ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bank deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Bank"
                        }
                    },
                    "400": {
                        "description": "error\": \"Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.AddNomineeRequest": {
            "type": "object",
            "required": [
                "account_number",
                "nominee_id"
            ],
            "properties": {
                "account_number": {
                    "type": "string"
                },
                "nominee_id": {
                    "type": "integer"
                }
            }
        },
        "handlers.CreateAccountRequest": {
            "type": "object",
            "required": [
                "account_type",
                "balance",
                "customer_id"
            ],
            "properties": {
                "account_type": {
                    "type": "string"
                },
                "balance": {
                    "type": "number"
                },
                "customer_id": {
                    "type": "integer"
                },
                "nominee_id": {
                    "type": "integer"
                }
            }
        },
        "handlers.CreateCustomerRequest": {
            "type": "object",
            "required": [
                "account_type",
                "address",
                "age",
                "balance",
                "branch_id",
                "dob",
                "name",
                "pan",
                "phone"
            ],
            "properties": {
                "account_type": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "age": {
                    "type": "integer"
                },
                "balance": {
                    "type": "number"
                },
                "branch_id": {
                    "type": "integer"
                },
                "dob": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pan": {
                    "type": "string"
                },
                "phone": {
                    "type": "integer"
                }
            }
        },
        "models.Account": {
            "type": "object",
            "properties": {
                "accountNumber": {
                    "type": "string"
                },
                "accountType": {
                    "type": "string"
                },
                "balance": {
                    "type": "number"
                },
                "branch": {
                    "$ref": "#/definitions/models.Branch"
                },
                "branchID": {
                    "type": "integer"
                },
                "customer": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Customer"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "transaction": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Transaction"
                    }
                }
            }
        },
        "models.Bank": {
            "type": "object",
            "properties": {
                "branch": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Branch"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Branch": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Account"
                    }
                },
                "address": {
                    "type": "string"
                },
                "bank": {
                    "$ref": "#/definitions/models.Bank"
                },
                "bankID": {
                    "type": "integer"
                },
                "customer": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Customer"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "ifsc_CODE": {
                    "type": "string"
                }
            }
        },
        "models.Customer": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Account"
                    }
                },
                "address": {
                    "type": "string"
                },
                "age": {
                    "type": "integer"
                },
                "branch": {
                    "$ref": "#/definitions/models.Branch"
                },
                "branchID": {
                    "type": "integer"
                },
                "dob": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "pan": {
                    "type": "string"
                },
                "phone": {
                    "type": "integer"
                }
            }
        },
        "models.Transaction": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/models.Account"
                },
                "accountID": {
                    "type": "integer"
                },
                "amount": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "modeOfPayment": {
                    "type": "string"
                },
                "receiverAccountNumber": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "typeOfTransaction": {
                    "type": "string"
                }
            }
        }
    }
}