definitions:
  handlers.AddNomineeRequest:
    properties:
      account_number:
        type: string
      nominee_id:
        type: integer
    required:
    - account_number
    - nominee_id
    type: object
  handlers.CreateAccountRequest:
    properties:
      account_type:
        type: string
      balance:
        type: number
      customer_id:
        type: integer
      nominee_id:
        type: integer
    required:
    - account_type
    - balance
    - customer_id
    type: object
  handlers.CreateCustomerRequest:
    properties:
      account_type:
        type: string
      address:
        type: string
      age:
        type: integer
      balance:
        type: number
      branch_id:
        type: integer
      dob:
        type: string
      name:
        type: string
      pan:
        type: string
      phone:
        type: integer
    required:
    - account_type
    - address
    - age
    - balance
    - branch_id
    - dob
    - name
    - pan
    - phone
    type: object
  models.Account:
    properties:
      accountNumber:
        type: string
      accountType:
        type: string
      balance:
        type: number
      branch:
        $ref: '#/definitions/models.Branch'
      branchID:
        type: integer
      customer:
        items:
          $ref: '#/definitions/models.Customer'
        type: array
      id:
        type: integer
      transaction:
        items:
          $ref: '#/definitions/models.Transaction'
        type: array
    type: object
  models.Bank:
    properties:
      branch:
        items:
          $ref: '#/definitions/models.Branch'
        type: array
      id:
        type: integer
      name:
        type: string
    type: object
  models.Branch:
    properties:
      account:
        items:
          $ref: '#/definitions/models.Account'
        type: array
      address:
        type: string
      bank:
        $ref: '#/definitions/models.Bank'
      bankID:
        type: integer
      customer:
        items:
          $ref: '#/definitions/models.Customer'
        type: array
      id:
        type: integer
      ifsc_CODE:
        type: string
    type: object
  models.Customer:
    properties:
      account:
        items:
          $ref: '#/definitions/models.Account'
        type: array
      address:
        type: string
      age:
        type: integer
      branch:
        $ref: '#/definitions/models.Branch'
      branchID:
        type: integer
      dob:
        type: string
      id:
        type: integer
      name:
        type: string
      pan:
        type: string
      phone:
        type: integer
    type: object
  models.Transaction:
    properties:
      account:
        $ref: '#/definitions/models.Account'
      accountID:
        type: integer
      amount:
        type: number
      id:
        type: integer
      modeOfPayment:
        type: string
      receiverAccountNumber:
        type: string
      time:
        type: string
      typeOfTransaction:
        type: string
    type: object
info:
  contact: {}
paths:
  /admin/branch:
    delete:
      description: Delete all branches
      produces:
      - application/json
      responses:
        "200":
          description: All branches have been deleted
          schema:
            type: string
        "400":
          description: 'error": "Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Delete all branches
      tags:
      - Branches
    post:
      consumes:
      - application/json
      description: Create a new branch
      parameters:
      - description: Branch object to be created
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Branch'
      produces:
      - application/json
      responses:
        "201":
          description: Branch created successfully
          schema:
            $ref: '#/definitions/models.Branch'
        "400":
          description: 'error": "Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Create a new branch
      tags:
      - Branches
    put:
      consumes:
      - application/json
      description: Update a branch with new information
      parameters:
      - description: Branch object to be updated
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Branch'
      produces:
      - application/json
      responses:
        "201":
          description: Branch updated successfully
          schema:
            $ref: '#/definitions/models.Branch'
        "400":
          description: 'error": "Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Update a branch
      tags:
      - Branches
  /admin/branch/{id}:
    delete:
      description: Delete a branch by its ID
      parameters:
      - description: Branch ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Branch deleted successfully
          schema:
            $ref: '#/definitions/models.Branch'
        "400":
          description: 'error": "Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Delete a branch by ID
      tags:
      - Branches
    get:
      description: Retrieve a branch by its ID
      parameters:
      - description: Branch ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Branch retrieved successfully
          schema:
            $ref: '#/definitions/models.Branch'
        "400":
          description: 'error": "Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Get a branch by ID
      tags:
      - Branches
  /customer/{id}/account:
    get:
      description: Retrieve all accounts by customer ID
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Account retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Get all accounts by customer ID
      tags:
      - Accounts
  /customer/account/{number}:
    get:
      description: Retrieve an account by its account number
      parameters:
      - description: Account number
        in: path
        name: number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Account retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Get an account by account number
      tags:
      - Accounts
  /customer/account/{number}/nominee:
    get:
      description: Retrieve all nominees by account number
      parameters:
      - description: Account number
        in: path
        name: number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Nominees retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Get all nominees by account number
      tags:
      - Customers
  /customer/account/{number}/nominee/{id}:
    delete:
      description: Delete a nominee from an account by ID
      parameters:
      - description: Account number
        in: path
        name: number
        required: true
        type: string
      - description: Nominee ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'Message: Nominee deleted'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Delete a nominee from an account by ID
      tags:
      - Nominees
  /customer/account/{number}/transactions:
    get:
      description: Retrieve all transactions by account number
      parameters:
      - description: Account number
        in: path
        name: number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Transactions retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Get all transactions by account number
      tags:
      - Transactions
  /customer/account/deposit:
    post:
      consumes:
      - application/json
      description: Deposit money into an account
      parameters:
      - description: Transaction object to be deposited
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Transaction'
      produces:
      - application/json
      responses:
        "202":
          description: 'message: Your Transaction has been completed successfully'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Deposit money into an account
      tags:
      - Transactions
  /customer/account/nominee:
    post:
      consumes:
      - application/json
      description: Add a nominee to an account
      parameters:
      - description: Add nominee request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.AddNomineeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 'Message: Nominee added'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Add a nominee to an account
      tags:
      - Nominees
  /customer/account/transactions/{id}:
    get:
      description: Retrieve a transaction by its ID
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Transaction retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Get a transaction by ID
      tags:
      - Transactions
  /customer/account/transfer:
    post:
      consumes:
      - application/json
      description: Transfer money between accounts
      parameters:
      - description: Transaction object to be transferred
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Transaction'
      produces:
      - application/json
      responses:
        "202":
          description: 'message: Your Transaction has been completed successfully'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Transfer money between accounts
      tags:
      - Transactions
  /customer/account/withdraw:
    post:
      consumes:
      - application/json
      description: Withdraw money from an account
      parameters:
      - description: Transaction object to be withdrawn
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Transaction'
      produces:
      - application/json
      responses:
        "202":
          description: 'message: Your Transaction has been completed successfully'
          schema:
            additionalProperties: true
            type: object
        "502":
          description: 'error: Bad gateway'
          schema:
            additionalProperties: true
            type: object
      summary: Withdraw money from an account
      tags:
      - Transactions
  /manager/account:
    delete:
      description: Delete all accounts
      produces:
      - application/json
      responses:
        "200":
          description: 'message: All tables have been deleted'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Delete all accounts
      tags:
      - Accounts
    post:
      consumes:
      - application/json
      description: Create a new account for a customer
      parameters:
      - description: Account object to be created
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateAccountRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Account created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Create a new account
      tags:
      - Accounts
    put:
      consumes:
      - application/json
      description: Update account information
      parameters:
      - description: Updated account object
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Account'
      produces:
      - application/json
      responses:
        "201":
          description: Account updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Update account information
      tags:
      - Accounts
  /manager/account/{id}:
    delete:
      description: Delete an account by its ID
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Branches deleted successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Delete an account by ID
      tags:
      - Accounts
    get:
      description: Retrieve an account by its ID
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Account retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Get an account by ID
      tags:
      - Accounts
  /manager/branch/{id}/account:
    get:
      description: Retrieve all accounts by branch ID
      parameters:
      - description: Branch ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Account retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Get all accounts by branch ID
      tags:
      - Accounts
  /manager/customer:
    delete:
      description: Delete all customers
      produces:
      - application/json
      responses:
        "200":
          description: 'message: All Customers have been deleted'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Delete all customers
      tags:
      - Customers
    post:
      consumes:
      - application/json
      description: Create a new customer and associated account
      parameters:
      - description: Customer object to be created
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateCustomerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Customer created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Create a new customer and account
      tags:
      - Customers
    put:
      consumes:
      - application/json
      description: Update customer information
      parameters:
      - description: Updated customer object
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Customer'
      produces:
      - application/json
      responses:
        "201":
          description: Customer updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Update customer information
      tags:
      - Customers
  /manager/customer/{id}:
    delete:
      description: Delete a customer by their ID
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Customer deleted successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Delete a customer by ID
      tags:
      - Customers
    get:
      description: Retrieve a customer by their ID
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Customer retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Get a customer by ID
      tags:
      - Customers
  /super/bank:
    delete:
      description: Delete all banks
      produces:
      - application/json
      responses:
        "200":
          description: 'message": "All rows have been deleted'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error": "Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Delete all banks
      tags:
      - Banks
    get:
      description: Retrieve all banks
      produces:
      - application/json
      responses:
        "200":
          description: Banks retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error": "Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Get all banks
      tags:
      - Banks
    post:
      consumes:
      - application/json
      description: Create a new bank with the provided name
      parameters:
      - description: Name of the bank
        in: body
        name: name
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: Bank created successfully
          schema:
            $ref: '#/definitions/models.Bank'
        "400":
          description: 'error": "Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Create a new bank
      tags:
      - Banks
    put:
      consumes:
      - application/json
      description: Update a bank with new information
      parameters:
      - description: Name of the bank
        in: body
        name: name
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: Bank updated successfully
          schema:
            $ref: '#/definitions/models.Bank'
        "400":
          description: 'error": "Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Update a bank
      tags:
      - Banks
  /super/bank/{id}:
    delete:
      description: Delete a bank by its ID
      parameters:
      - description: Bank ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Bank deleted successfully
          schema:
            $ref: '#/definitions/models.Bank'
        "400":
          description: 'error": "Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Delete a bank by ID
      tags:
      - Banks
    get:
      description: Retrieve a bank by its ID
      parameters:
      - description: Bank ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Bank retrieved successfully
          schema:
            $ref: '#/definitions/models.Bank'
        "400":
          description: 'error": "Bad request'
          schema:
            additionalProperties: true
            type: object
      summary: Get a bank by ID
      tags:
      - Banks
swagger: "2.0"
